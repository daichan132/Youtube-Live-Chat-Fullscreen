name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "yarn"
      - name: Install dependencies
        run: rm -rf node_modules && yarn install --frozen-lockfile
      - name: Build
        run: yarn build

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "yarn"
      - name: Install dependencies
        run: rm -rf node_modules && yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint

  version-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Get current version from package.json
        id: get_version
        run: echo "::set-output name=version::$(jq -r .version package.json)"

      - name: Check if version has been updated
        run: |
          git fetch origin main:main
          git checkout main
          OLD_VERSION=$(jq -r .version package.json)
          git checkout -
          NEW_VERSION=$(jq -r .version package.json)
          if [ "$OLD_VERSION" = "$NEW_VERSION" ]; then
            echo "Error: The version in package.json has not been updated."
            exit 1
          else
            echo "Version has been updated from $OLD_VERSION to $NEW_VERSION."
          fi
